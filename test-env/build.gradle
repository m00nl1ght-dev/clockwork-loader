
final testRunDir = file("test-run")
final pluginDir = new File(testRunDir, "plugins")
testRunDir.mkdirs()

sourceSets {
    testPluginA
}

task testPluginAJar(type: Jar) {
    archiveClassifier.set 'testPluginA'
    from sourceSets.testPluginA.output
    manifest { from(new File(sourceSets.testPluginA.resources.getSrcDirs()[0], 'META-INF/MANIFEST.MF')) }
    destinationDir(pluginDir)
}

dependencies {

    api project(':core')
    implementation project(':ext-annotations')
    implementation project(':ext-nightconfig')
    implementation project(':ext-pluginrepo')
    implementation project(':ext-security')
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: log4jVersion
    runtimeOnly group: 'com.electronwill.night-config', name: 'toml', version: nightconfigVersion

    testPluginACompile project(':core')
    testPluginACompile project(':test-env')
    testPluginACompile project(':ext-annotations')
    testPluginACompile group: 'org.apache.logging.log4j', name: 'log4j-core', version: log4jVersion

    testImplementation(platform('org.junit:junit-bom:5.7.0'))
    testImplementation('org.junit.jupiter:junit-jupiter')

}

test {
    dependsOn testPluginAJar
    workingDir testRunDir
}
